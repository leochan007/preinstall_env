#/bin/bash

#ssh root@47.89.208.49
#ssh -L 8001:localhost:8001  root@47.89.208.49
#ssh -L 8001:localhost:8001  root@47.88.53.196
#config set-cluster local --server=http://127.0.0.1:8080 --insecure-skip-tls-verify=true
#ps -ef | grep kube
echo y | kubeadm reset

# --pod-network-cidr=10.28.215.0/22
#--insecure-port=8090
#--allocate-node-cidrs=true --cluster-cidr=10.28.215.0/22

#echo "source <(kubectl completion bash)" >> ~/.bashrc

kubeadm init --kubernetes-version=v1.11.1 --pod-network-cidr=172.20.37.0/20 \
    --apiserver-advertise-address=0.0.0.0 --apiserver-bind-port 6443 > note.txt

export KUBECONFIG=/etc/kubernetes/admin.conf

kubectl --kubeconfig /etc/kubernetes/admin.conf get nodes

kubectl get nodes -s 0.0.0.0:8001

kubectl get pods --all-namespaces -s 0.0.0.0:8001

#vim /etc/sysctl.conf
sysctl net.bridge.bridge-nf-call-iptables=1

#openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'

#addons
#kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.10.0/Documentation/kube-flannel.yml
#kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-legacy.yml
kubectl get pods --all-namespaces|grep flannel|awk -F ' ' '{print $2}'|xargs kubectl logs --namespace=kube-system
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml
#kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel-aliyun.yml
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml

#serve proxy
#kubectl proxy --address=0.0.0.0 --port=8001 --accept-hosts='^localhost$,^127\.0\.0\.1$,^\[::1\]$' --accept-paths='^.*'
kubectl proxy --address=0.0.0.0 --port=8001 --accept-hosts='^*$' --accept-paths='.'
#nohup kubectl proxy --address=0.0.0.0 --port=8001 --accept-hosts='^*$' --accept-paths='.' &

kubectl create -f ServiceAccount.yaml -s 0.0.0.0:8001
kubectl create -f ClusterRoleBinding.yaml -s 0.0.0.0:8001

#web access
#http://47.89.208.49:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/
#http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/

#kubectl describe services kubernetes-dashboard --namespace=kube-system -s 0.0.0.0:8001
#kubectl get secret -n kube-system -s 0.0.0.0:8001 | grep dashboard
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret -s 0.0.0.0:8001 | grep admin-user | awk '{print $1}') -s 0.0.0.0:8001

#kubeadm token list
#kubectl create serviceaccount k8sadmin -n kube-system -s 0.0.0.0:8001
#kubectl create clusterrolebinding k8sadmin --clusterrole=cluster-admin --serviceaccount=kube-system:k8sadmin -s 0.0.0.0:8001
#kubectl get secret -n kube-system -s 0.0.0.0:8001 | grep k8sadmin | cut -d " " -f1 | xargs -n 1 | xargs kubectl -s 0.0.0.0:8001 get secret  -o 'jsonpath={.data.token}' -n kube-system | base64 --decode

#single node
kubectl taint nodes --all node-role.kubernetes.io/master- -s 0.0.0.0:8001

kubectl create -f https://raw.githubusercontent.com/gjmzj/kubeasz/master/manifests/ingress/traefik-ingress.yaml -s 0.0.0.0:8001

